1
00:00:00,000 --> 00:00:02,890
Chapter 5: Playing part 1 sequence on a loop.

2
00:00:03,060 --> 00:00:05,500
SP: Right now there is no way to loop.

3
00:00:05,500 --> 00:00:07,730
DN: Right.

4
00:00:07,730 --> 00:00:10,870
We just play 1 player.

5
00:00:10,870 --> 00:00:13,690
And there is also no way to adjust the tempo.

6
00:00:13,690 --> 00:00:19,270
And also there is no way to stop it. Once it
starts playing I can't stop it and I can't continue.

7
00:00:19,300 --> 00:00:24,590
So we need to change this and
do a different way of scheduling.

8
00:00:25,080 --> 00:00:32,920
We need to do a proper way of scheduling,
because I could go on following your challenge,

9
00:00:32,940 --> 00:00:43,160
With this sequence I have in my array, I could build
something which generates this narrow variation.

10
00:00:43,190 --> 00:00:47,394
And also load another sample so the other
player is playing the same thing at the same time.

11
00:00:47,405 --> 00:00:52,830
But the issue with that (and same thing here), is that
I'm scheduling the whole thing from the beginning.

12
00:00:52,880 --> 00:00:55,900
Then once it's playing there's no way to stop it.

13
00:00:55,910 --> 00:01:00,260
And then I won't be doing the things that
you ask me for which is playing and stopping it,

14
00:01:00,274 --> 00:01:05,270
and changing the tempo etc.
Right now this will be pretty boring.

15
00:01:05,270 --> 00:01:10,110
One of the best things with web
audio is that you can interact with it.

16
00:01:10,110 --> 00:01:17,700
It's very playful, and generates things
dynamically. And what we're doing isn't very dynamic.

17
00:01:17,720 --> 00:01:24,810
As I said, web audio is running a
different clock so you could try and do a timeout.

18
00:01:24,820 --> 00:01:30,380
But that's not a good idea because timeouts are
very erratic and they depend on a lot of things.

19
00:01:30,560 --> 00:01:41,710
It is recommended to have a timeout that
periodically checks if it needs to schedule things.

20
00:01:41,730 --> 00:01:49,830
So a way to explain that would be... We
are going to keep track of which step we are in.

21
00:01:49,860 --> 00:01:57,160
And we know how long each step takes, so timeout is
going to be checking if it needs to schedule things.

22
00:01:57,180 --> 00:02:02,220
Every time we've finished with
a function we give it a new timeout.

23
00:02:02,220 --> 00:02:04,100
So it's not a timer, it's a timeout.

24
00:02:04,140 --> 00:02:09,050
So we are going to keep track of which
position we are in in the steps in the sequence.

25
00:02:09,110 --> 00:02:14,300
So every time the timeout is going to
run it's going to say "Which step are we in?",

26
00:02:14,310 --> 00:02:20,330
and see if it needs to trigger
things or schedule things to be triggered.

27
00:02:20,370 --> 00:02:22,970
The reason it's a timeout
and not just a timer is because

28
00:02:22,980 --> 00:02:26,910
a timer is going to be trying to
call all the time as fast as possible.

29
00:02:26,920 --> 00:02:31,530
But with timeout, if for
example you drift a little bit,

30
00:02:31,550 --> 00:02:39,330
the next time you called you will try
to make up for whatever you missed.

31
00:02:39,360 --> 00:02:45,590
DN: If I understand correctly, the way
we've done it so far is to define one bar of music,

32
00:02:45,600 --> 00:02:49,810
and we've defined it all up front. And then we
just set it running and it plays and we can't stop it.

33
00:02:49,840 --> 00:02:51,700
But with this it's almost like we're saying...

34
00:02:51,710 --> 00:02:53,240
SP: We're going to be reading the score.

35
00:02:53,240 --> 00:02:56,120
DN: We're going to be reading
the score like a musician does.

36
00:02:56,150 --> 00:02:58,390
And at each point in time
we're scheduling the next beat.

37
00:02:58,410 --> 00:03:03,250
SP: Exactly. And like a conductor saying
"slow down" because we changed the tempo,

38
00:03:03,280 --> 00:03:06,350
we're still reading the score but take longer.

39
00:03:06,380 --> 00:03:11,880
SP: And if someone says pause, just pause for
a moment, instead of "Oh, I can't pause now".

40
00:03:11,880 --> 00:03:13,760
DN: OK.

41
00:03:13,800 --> 00:03:19,550
SP: So I will just describe a step or
something and stop at 0. Which is where I am.

42
00:03:19,630 --> 00:03:22,100
So I want to introduce a couple of functions,

43
00:03:22,110 --> 00:03:29,220
one for starting and one for stopping,
and another for trying the timeout.

44
00:03:29,240 --> 00:03:32,790
SP: We won't call this playSequence,
but I'll delete that thing later.

45
00:03:32,800 --> 00:03:42,120
And I can delete this thing also.
I like to have some spaces here as well.

46
00:03:42,170 --> 00:03:47,420
And for some reason I
have these little curly things.

47
00:03:47,450 --> 00:03:52,730
SP: So I've got start and I've got stop.

48
00:03:52,750 --> 00:03:59,100
I like to write this skeleton so
I know I need to fill things later.

49
00:03:59,120 --> 00:04:05,000
It's what I always do. And at
the end of this I will call this again.

50
00:04:05,030 --> 00:04:08,260
DN: I see.

51
00:04:08,260 --> 00:04:16,940
SP: I will use this so I can
cancel this on stop... Is it clearTimeout?

52
00:04:16,970 --> 00:04:22,060
Because obviously cancel was
not a good name. [Laughter]

53
00:04:22,060 --> 00:04:25,440
So I build this thing.

54
00:04:26,350 --> 00:04:29,620
So that's more or less what we want to do.

55
00:04:29,650 --> 00:04:31,640
That's why I think it's a
good idea to have the skeleton;

56
00:04:31,670 --> 00:04:36,420
so you can say I want to
start and stop. And that's the crux.

57
00:04:36,450 --> 00:04:38,670
Obviously we want to have more things in schedule().

58
00:04:38,690 --> 00:04:43,830
Not just like start or stop timeout.
I also need to create the timeout as well.

59
00:04:43,830 --> 00:04:46,990
[Silence]

60
00:04:49,100 --> 00:04:55,720
It's nothing right now. It's good
to be clear about your intentions.

61
00:04:55,740 --> 00:05:05,170
So when I start this thing I'll
save the time at which this started?

62
00:05:05,200 --> 00:05:09,120
Let me think.

63
00:05:09,140 --> 00:05:13,480
That way I know when I pause
the thing, I can calculate the steps.

64
00:05:13,510 --> 00:05:17,130
This is a bit weird, and it
takes a long time to understand,

65
00:05:17,140 --> 00:05:19,920
but you will understand why I schedule this thing.

66
00:05:19,940 --> 00:05:20,530
DN: OK.

67
00:05:20,530 --> 00:05:28,210
SP: So you have the sequence, but you
can't pause or play,  or change the tempo,

68
00:05:28,228 --> 00:05:32,060
You're just scheduling everything in
advance and that's not the way it should be.

69
00:05:32,080 --> 00:05:37,190
And it's not really playful. So
what we should use is 2 clocks.

70
00:05:37,200 --> 00:05:40,350
There's this brilliant tutorial
called 'A tale of the two clocks'.

71
00:05:42,720 --> 00:05:46,910
So essentially what were going to have is
this timeout function; this scheduling function.

72
00:05:46,950 --> 00:05:52,640
It's going to be like the player looking at
the score saying "What do I need to do now"?

73
00:05:52,660 --> 00:05:59,610
It's fast enough but not exactly
like what a player would do. Inaud.

74
00:05:59,640 --> 00:06:09,030
So the way we do this thing is with this
timeout that I'm going to be setting all the time.

75
00:06:09,060 --> 00:06:12,700
It's kind of complex to build
this thing from the ground up,

76
00:06:12,730 --> 00:06:15,410
and I always forget something,
so I've prepared a skeleton.

77
00:06:15,440 --> 00:06:18,070
It's a simplified version of the tutorial.

78
00:06:18,110 --> 00:06:24,060
Because the tutorial also deals with having
swings, so you can smooth out the tempo at every step.

79
00:06:24,090 --> 00:06:28,630
But I think that's too complex for this,
and also "Clapping Music" doesn't have swing changes!

80
00:06:28,650 --> 00:06:33,400
So I feel it's best to have
a simplified version here.

81
00:06:33,450 --> 00:06:41,600
So this skeleton has a start function,
a stop function so we can clear the timeout,

82
00:06:41,600 --> 00:06:48,080
and a schedule function, which
determines how long each beat is.

83
00:06:48,080 --> 00:06:53,170
Like 60 seconds slash the bpm,
gives us the number of seconds per beat.

84
00:06:53,190 --> 00:07:01,740
And we want each step to be a quarter of a note.
Like a black note, so that's the length of the step.

85
00:07:01,760 --> 00:07:08,430
And we want the schedule
function running every time we can.

86
00:07:08,450 --> 00:07:17,280
Every time it runs it will look at the
current time in context, minus the start time.

87
00:07:17,320 --> 00:07:19,920
Which is what we said when we started.

88
00:07:19,920 --> 00:07:25,900
So if you have the sequence it can
try to make things relative to the steps.

89
00:07:25,920 --> 00:07:29,490
And not to whatever time the whole thing started.

90
00:07:29,510 --> 00:07:30,930
DN: Yes, right.

91
00:07:30,930 --> 00:07:40,150
SP: So the step time starts at zero, so if you start at
zero and this thing is related to the serial thingy,

92
00:07:40,170 --> 00:07:46,190
it's easy to say "Am I still in this step,
or do I need to jump to the next one"?

93
00:07:46,210 --> 00:07:50,400
Or, "Should I just stop
because it's not time to play it yet?"

94
00:07:50,440 --> 00:07:53,810
So that's what we are doing here.

95
00:07:53,840 --> 00:07:59,200
So with the step time and the start
time, you can say if something has to happen,

96
00:07:59,230 --> 00:08:04,620
it has to happen at step time, using the sequence.

97
00:08:04,660 --> 00:08:08,670
But when you scale the thing
you scale in the context playtime,

98
00:08:08,670 --> 00:08:10,950
which is the web audio clock.

99
00:08:10,970 --> 00:08:14,650
So you have this sequence which
is totally atemporal, so to speak,

100
00:08:14,680 --> 00:08:17,340
We are going to be looping
over the sequence all the time.

101
00:08:17,340 --> 00:08:19,910
But when you schedule
things you do it with the context

102
00:08:19,920 --> 00:08:24,860
because we will be playing and stopping things
several times during the lifetime of the website,

103
00:08:24,900 --> 00:08:31,160
so that the clock of the context keeps
growing, but the sequences are still zero one.

104
00:08:31,180 --> 00:08:35,790
Supposing its one step, one
second, zero one two three four.

105
00:08:35,810 --> 00:08:39,340
At some point the context might
be for example, thousands of seconds.

106
00:08:39,340 --> 00:08:49,400
So that's why you need to
remove or subtract something.

107
00:08:49,410 --> 00:08:56,410
And that's when you need to subtract
this start time, so it becomes relative again.

108
00:08:56,440 --> 00:09:01,720
Then we go to the next step and if it's
more than the number of steps we are looping,

109
00:09:01,740 --> 00:09:03,990
then we go back to zero again.

110
00:09:04,030 --> 00:09:08,190
And then you have step length
and you want to scale it again.

111
00:09:08,190 --> 00:09:10,320
DN: And it calls itself.

112
00:09:10,350 --> 00:09:16,420
SP: Yes. I can reason about this
now because I understand it better.

113
00:09:16,460 --> 00:09:24,380
But the first time I tried it, it didn't
really work, it's hard to do it by yourself.

114
00:09:24,420 --> 00:09:27,020
You need to go through the tutorial first.

115
00:09:27,050 --> 00:09:36,060
I want to just copy this. So this is
the functions and I'll put them at the end.

116
00:09:37,220 --> 00:09:44,000
DN: I did notice that here it talks about a
context whereas you've abbreviated that as ac.

117
00:09:44,050 --> 00:09:47,840
That might cause problems.

118
00:09:47,840 --> 00:09:54,850
SP: Yes your right, I was being super
minimal here. So we need to change this to ac.

119
00:09:54,890 --> 00:10:00,460
This extra 0.005 thingy, it gives you some leeway.

120
00:10:00,510 --> 00:10:08,820
When you press and release the button, it's a little
bit after; in case there was some delay or whatever.

121
00:10:08,820 --> 00:10:13,050
And here as well is a loop.

122
00:10:15,740 --> 00:10:18,300
inaud

123
00:10:18,320 --> 00:10:23,090
Then I also need the firewalls. I might
have some already. I don't know.

124
00:10:26,030 --> 00:10:33,310
I should maybe be using JSHint but I got this
computer recently and I haven't installed it yet.

125
00:10:33,350 --> 00:10:34,900
So things are missing.

126
00:10:34,920 --> 00:10:40,740
I usually have indicators on the side like
"this line is wrong" but I don't have anything yet.

127
00:10:40,760 --> 00:10:48,020
So, I suppose... This is step time, step length,
we will make this dependent on the BPM.

128
00:10:48,390 --> 00:10:55,030
So suppose I use 70. I've found this
is the right number for clapping music.

129
00:10:56,390 --> 00:11:00,040
So now instead of playing this sequence...

130
00:11:00,290 --> 00:11:03,300
[Sole thinks]

131
00:11:06,780 --> 00:11:11,700
We just do playback, we don't do any more.

132
00:11:11,700 --> 00:11:14,860
Just play. [Laughter]

133
00:11:17,400 --> 00:11:20,720
But play doesn't exist.

134
00:11:20,740 --> 00:11:28,040
We should also shift everything to
the right because it's not indented.

135
00:11:28,040 --> 00:11:31,030
[Silence]

136
00:11:32,970 --> 00:11:34,250
Yes, this is start so...

137
00:11:34,280 --> 00:11:36,914
Before we start we need
to install the buffer somewhere,

138
00:11:36,948 --> 00:11:39,650
because otherwise it won't
know what to play with what.

139
00:11:39,650 --> 00:11:42,050
DN: Right.

140
00:11:42,100 --> 00:11:45,200
[Silence]

141
00:11:48,650 --> 00:11:52,330
SP: For example. [Laughter]
DN: OK.

142
00:11:52,350 --> 00:11:55,500
SP: So I set the sample to decode the buffer.

143
00:11:57,620 --> 00:11:59,990
And then we can start playing.

144
00:12:00,030 --> 00:12:01,800
So now when we start playing,
nothing is going to happen,

145
00:12:01,820 --> 00:12:05,320
because we're not doing
anything in the schedule() function.

146
00:12:05,350 --> 00:12:13,970
We have the start time, the step time is zero here.

147
00:12:13,970 --> 00:12:21,470
we have a schedule button thingy, and
we will need buttons for starting and stopping.

148
00:12:21,500 --> 00:12:25,350
Let's suppose we start early.

149
00:12:25,410 --> 00:12:33,530
This is not zero so we will have an issue here.

150
00:12:33,550 --> 00:12:37,480
And then we want to play a quarter note la la la la.

151
00:12:37,500 --> 00:12:43,120
So here we need to decide what we are
going to do every time we do this schedule thing.

152
00:12:43,120 --> 00:12:48,971
So how do we start with something
should happen; we need to look at the sequence.

153
00:12:50,580 --> 00:12:57,040
Whatever element we are in
we need to look at the current step.

154
00:12:57,670 --> 00:13:00,650
This is kind of similar to
the previous play sequence

155
00:13:00,670 --> 00:13:07,600
but we may not look at the
whole thing, just do one step at a time.

156
00:13:07,620 --> 00:13:14,830
So shouldPlay is a sequence of current step.

157
00:13:16,980 --> 00:13:20,030
So if it should play...

158
00:13:21,120 --> 00:13:24,700
Something should happen. [Laughter]

159
00:13:26,040 --> 00:13:29,770
DN: So this schedule function gets
called what, a hundred times a second?

160
00:13:29,800 --> 00:13:36,800
SP: Yes it could be, if it's step time minus...

161
00:13:36,800 --> 00:13:40,410
less than current time plus
this very small fraction of time.

162
00:13:40,470 --> 00:13:45,010
So it shouldn't advance a lot in time.

163
00:13:45,290 --> 00:13:49,030
So currentStep should play...

164
00:13:49,040 --> 00:13:55,570
I'm going to comment this thing... Let me think.

165
00:13:55,950 --> 00:14:03,500
So it needs to be called a number
of times just to make sure this is happening.

166
00:14:05,930 --> 00:14:08,720
I'm looping. [Laughter]

167
00:14:08,720 --> 00:14:13,500
So in theory it should start
playing as soon as this thing is loaded.

168
00:14:15,350 --> 00:14:22,540
Nothing should play now but
I'm trying to see if it's looping even more.

169
00:14:23,380 --> 00:14:27,440
Every time you change the
system you should also be different.

170
00:14:27,470 --> 00:14:33,370
I want to make sure that things
are happening on the right order.

171
00:14:36,120 --> 00:14:39,140
So just to make sure.

172
00:14:41,150 --> 00:14:43,470
I've got some error so that's good.

173
00:14:43,500 --> 00:14:49,460
The number of steps is undefined...
because inaud the sequence step.

174
00:14:50,690 --> 00:14:53,490
That's why you need to complete the skeleton.

175
00:14:53,490 --> 00:14:55,820
DN: Right

176
00:14:55,850 --> 00:14:59,240
[Silence]

177
00:15:01,300 --> 00:15:07,700
SP: Try again. OK so now it's doing things;
ta ta ta then loop, and then it starts again.

178
00:15:09,260 --> 00:15:12,970
Where is it showing me?

179
00:15:13,410 --> 00:15:16,450
[Sole thinks]

180
00:15:18,350 --> 00:15:22,270
It should start at zero. I am confused.

181
00:15:22,290 --> 00:15:25,500
DN: It goes up to 13 doesn't it? 1 to 13.

182
00:15:25,510 --> 00:15:28,140
SP: Why is it current step?

183
00:15:28,170 --> 00:15:33,780
Oh because the next time it goes it says "hey this
is longer than the number of steps I go back to".

184
00:15:33,810 --> 00:15:36,377
"So this is not correct".

185
00:15:36,468 --> 00:15:43,460
Later we might want to show the current step
with base one, because that's what humans use.

186
00:15:43,490 --> 00:15:46,140
We don't say "We're in step zero, we're in step one."

187
00:15:46,160 --> 00:15:49,740
So I was thinking, have I done
this thing without even knowing?

188
00:15:49,760 --> 00:15:56,490
So it's looking as it should be, but were not
playing that and we're also not pausing that,

189
00:15:56,520 --> 00:16:00,080
so we might want to make this thing play again.

190
00:16:00,110 --> 00:16:05,380
So if it should play...

191
00:16:06,750 --> 00:16:12,130
We should do the same thing as we did before.
Was it play buffer? (I can never remember).

192
00:16:12,130 --> 00:16:15,690
I did it just a minute ago, let's just see...

193
00:16:15,690 --> 00:16:23,370
We want to use the clap sample we
stored before. And when is contextPlayTime.

194
00:16:25,880 --> 00:16:30,960
Because that's the absolute time,
instead of relative to this sequence.

195
00:16:31,100 --> 00:16:35,640
As I said, it's a bit confusing, but suppose
you just have the whole time line with a clock.

196
00:16:35,650 --> 00:16:39,880
And your copying the sequence
and transposing that and you pause.

197
00:16:39,910 --> 00:16:42,770
The sequences are stopped
and then you continue again,

198
00:16:42,800 --> 00:16:45,480
but it has to be from a new starting point.

199
00:16:45,480 --> 00:16:47,940
DN: Yes you have to add
that time while it was paused.

200
00:16:47,940 --> 00:16:52,770
SP: Yes because otherwise you
get weird things when you 'unpause'.

201
00:16:52,820 --> 00:16:55,760
Like, why is this not really playing as it should?

202
00:16:55,780 --> 00:16:59,170
So in theory, and if I haven't messed
up anything else, it should play again.

203
00:16:59,170 --> 00:17:00,540
[We hear the clapping]

204
00:17:00,540 --> 00:17:04,010
And now it should loop... Yes!

205
00:17:04,050 --> 00:17:06,060
I think it's got the final...

206
00:17:06,080 --> 00:17:12,880
DN: It feels to me like there's an
extra silent beat. (They listen to the music).

207
00:17:13,740 --> 00:17:14,810
SP: Is that right?

208
00:17:14,830 --> 00:17:20,020
DN: No. It feels like within a cell, the rests...

209
00:17:20,060 --> 00:17:23,770
SP: Ah there is an extra something, maybe?
DN: Yeah, I think so.

210
00:17:24,260 --> 00:17:28,230
DN: And it's still going up to 13.  I think
there's like two empty beats at the end.

211
00:17:28,260 --> 00:17:31,380
SP: Yeah, it feels like one empty beat.

212
00:17:31,380 --> 00:17:39,960
OK, I'm going to go here and do this thing
that we added which is... so that's very convenient.

213
00:17:40,850 --> 00:17:45,420
OK why are you doing this thing?

214
00:17:45,420 --> 00:17:50,180
So it is going to 13 which it shouldn't.

215
00:17:50,180 --> 00:17:53,860
I think the issue is here it
shouldn't be currentStep more than (>),

216
00:17:53,900 --> 00:17:57,860
it should be equal (===) and then hopefully...

217
00:17:57,880 --> 00:18:00,090
Let me play it again.

218
00:18:00,090 --> 00:18:03,410
[They listen]

219
00:18:03,600 --> 00:18:04,470
DN: That sounds good.

220
00:18:04,490 --> 00:18:08,760
SP: But there isn't the extra step, from nowhere.

221
00:18:08,790 --> 00:18:10,530
DN: And were going from 1 to 12 now.

222
00:18:10,540 --> 00:18:14,100
SP: And also it wasn't playing because
there was nothing in the sequence to play

223
00:18:14,100 --> 00:18:16,570
so it was saying ah ha no playing.

224
00:18:16,600 --> 00:18:19,480
If we had printed a value, which
is something that I was going to do,

225
00:18:19,500 --> 00:18:20,790
then we would have got an undefined.

226
00:18:20,810 --> 00:18:23,810
And I will be like "hey we are
going too far" something like that.

227
00:18:23,810 --> 00:18:28,950
So that's why sometimes, it's not the
best practice, especially when we have lots of data.

228
00:18:30,990 --> 00:18:33,640
DN: You have to click that at just the right time.
SP: Yes, yes.

229
00:18:33,640 --> 00:18:36,740
I will need to file a bug for this.

230
00:18:36,811 --> 00:18:39,850
Yes so if you have a lot of
data printing that to the console,

231
00:18:39,880 --> 00:18:43,580
it's not very convenient but with these
small things it's OK, just to bring up the value

232
00:18:43,590 --> 00:18:51,400
and check that you're getting the right things,
especially with timing. You notice when that's off!

233
00:18:51,420 --> 00:18:56,340
DN: So I guess at this point, if you
where to change the beat per minute figure.

234
00:18:56,360 --> 00:18:59,490
If you were to hard code it to something else...

235
00:18:59,500 --> 00:19:03,560
SP: Yes I can hard code it... You can see the difference.

236
00:19:03,560 --> 00:19:08,260
OK, I made it to 100 bpm.

237
00:19:08,290 --> 00:19:10,130
DN: Yes. That's exciting! [the clapping plays]

238
00:19:10,160 --> 00:19:16,370
SP: I'm hoping the original plays
this fast or any of the ones I've seen.

239
00:19:18,310 --> 00:19:23,760
I think with control-M... Ah yes!
With control M you can mute.

240
00:19:23,780 --> 00:19:29,760
OK, we learned something. So I
guess we can make this go back to 70 bpm.

241
00:19:29,790 --> 00:19:32,710
And let's check this thing in...

242
00:19:32,770 --> 00:19:35,800
[Silence]

